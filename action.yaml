---
name: Kubesec
description: Security risk analysis for Kubernetes resources.
author: ixxeL
inputs:
  format:
    description: Format result. [template]
    required: false
    default: json
  output:
    description: Set output location.
    required: false
    default: ''
  exit-zero:
    description: Force exit 0 code
    required: false
    default: 'true'
  file:
    description: file to scan
    required: true

runs:
  using: composite
  steps:
  - id: kubesec
    run: |
      set +e
      echo -e "${BLUE}[ STEP - IaC security scan ] > IaC code security scan with Kubesec.${BLANK}"
      echo -e "${CYAN}[ INFO ] > Kubesec version.${BLANK}"
      kubesec version

      echo -e "${YELLOW}[ EXECUTING ] > Executing Kubesec IaC test on ${{ inputs.file }}.${BLANK}"

      if [[ "${{ inputs.format }}" = "json" ]]
      then
        echo -e "${CYAN}[ INFO ] > Using JSON format.${BLANK}"
        kubesec scan --format=${{ inputs.format }} --output=${{ inputs.output }} ${{ inputs.file }} | jq -C
      else
        echo -e "${CYAN}[ INFO ] > Using TEMPLATE format.${BLANK}"
        kubesec scan --format=${{ inputs.format }} --output=${{ inputs.output }} ${{ inputs.file }}
      fi

      EXIT_CODE="${PIPESTATUS[0]}"
      if [[ ${EXIT_CODE} -ne 0 && ${{ inputs.exit-zero }} != true ]]
      then
        echo -e "${RED}[ FAIL ] > Kubesec IaC scan failed.${BLANK}"
        exit ${EXIT_CODE}
      else
        echo -e "${GREEN}[ SUCCESS ] > Kubesec IaC scan succeeded.${BLANK}"
      fi
    shell: bash
    env:
      RED: \033[1;31m
      GREEN: \033[1;32m
      YELLOW: \033[1;33m
      BLUE: \033[1;34m
      PURPLE: \033[1;35m
      CYAN: \033[1;36m
      BLANK: \033[0m
